service: ${self:custom.metadata-schema-publisher.name}

frameworkVersion: ">=1.0.0 <2.0.0"

plugins:
  - serverless-finch
  - serverless-python-requirements
custom:
  metadata-schema-publisher: ${file(metadata-schema-publisher.yml)}
  snsTopicName: ${self:custom.metadata-schema-publisher.name}-${self:custom.metadata-schema-publisher.notification-event}-${self:custom.metadata-schema-publisher.stage}
  client:
    bucketName: ${self:custom.metadata-schema-publisher.prod-bucket-name}
    distributionFolder: client

provider:
  name: aws
  region: us-east-1
  stage: ${self:custom.metadata-schema-publisher.stage}
  timeout: 300
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:custom.metadata-schema-publisher.prod-bucket-name}/*"
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:custom.metadata-schema-publisher.staging-bucket-name}/*"
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:custom.metadata-schema-publisher.integration-bucket-name}/*"
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:custom.metadata-schema-publisher.dev-bucket-name}/*"
    - Effect: Allow
      Action:
        - secretsmanager:GetSecretValue
      Resource: "arn:aws:secretsmanager:*:*:secret:${self:custom.metadata-schema-publisher.secret-name}-??????"
    - Effect: Allow
      Action:
        - SNS:Publish
      Resource: "arn:aws:sns:*:*:${self:custom.metadata-schema-publisher.sns-topic-name}"

functions:
  onGithubPush:
    runtime: python3.6
    handler: handler.on_github_push
    environment:
      PROD_BUCKET: ${self:custom.metadata-schema-publisher.prod-bucket-name}
      STAGING_BUCKET: ${self:custom.metadata-schema-publisher.staging-bucket-name}
      INTEGRATION_BUCKET: ${self:custom.metadata-schema-publisher.integration-bucket-name}
      DEV_BUCKET: ${self:custom.metadata-schema-publisher.dev-bucket-name}
      TOPIC_NAME: ${self:custom.metadata-schema-publisher.sns-topic-name}
      AWS_PROVIDER_REGION: ${self:provider.region}
      SECRET_NAME: ${self:custom.metadata-schema-publisher.secret-name}
    events:
      - http:
          path: github/push
          method: post
  snsToSlack:
    runtime: python3.6
    handler: handler.sns_to_slack
    environment:
      AWS_PROVIDER_REGION: ${self:provider.region}
      SECRET_NAME: ${self:custom.metadata-schema-publisher.secret-name}
    events:
      - sns:
          arn:
            Fn::Join:
              - ""
              - - "arn:aws:sns:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":"
                - ${self:custom.snsTopicName}
          topicName: ${self:custom.snsTopicName}

resources:
  Resources:
    Notification:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.snsTopicName}

